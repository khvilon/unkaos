version: '3.7'

services:
  ossa:
    build:
      context: .
      dockerfile: server/docker/ossa
    restart: always
    ports:
     - '3004'
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    depends_on:
      - postgres
      - memcached

  cerberus:
    build:
      context: .
      dockerfile: server/docker/cerberus
    restart: always
    ports:
      - '3005'
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - HERMES_URL=${HERMES_URL}
    depends_on:
      - postgres

  zeus:
    build:
      context: .
      dockerfile: server/docker/zeus
    restart: always
    ports:
      - '3006'
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    depends_on:
      - postgres
      - ossa
  
  eileithyia:
    build:
      context: .
      dockerfile: server/docker/eileithyia
    restart: always
    ports:
      - '5001'
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DOMAIN=${DOMAIN}
    depends_on:
      - postgres

  gateway:
    build:
      context: .
      dockerfile: server/docker/gateway
    restart: always
    ports:
      - '3001'
    environment:
      - ZEUS_URL=${ZEUS_URL}
      - CERBERUS_URL=${CERBERUS_URL}
      - ATHENA_URL=${ATHENA_URL}
      - DOMAIN=${DOMAIN}
    depends_on:
      - zeus
      - cerberus
      - athena

  hermes:
    build:
      context: .
      dockerfile: server/docker/hermes
    restart: always
    ports:
      - '5009'
    environment:
      - BASE_URL="https://${DOMAIN}/"
      - HERMES_PORT=${HERMES_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    depends_on:
      - postgres

  athena:
    build:
      context: .
      dockerfile: server/docker/athena
    restart: always
    ports:
      - '5010'
    environment:
      - ATHENA_PORT=${ATHENA_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    depends_on:
      - postgres

  memcached:
    image: memcached:latest
    ports:
      - "11211:11211"
    command:
      - memcached
      - -v # Increase verbosity
    depends_on:
      - postgres

      
  nginx:
    build:
      context: .
      dockerfile: server/docker/nginx
    restart: always
    volumes:
     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
     - ./nginx/ssl:/etc/nginx/ssl
     - ./nginx/conf.d:/etc/nginx/conf.d
     - ./nginx/templates:/etc/nginx/templates
     - ./www:/var/www
    container_name: unkaos-nginx
    ports:
     - '80:80'
     - '443:443'
     - '3003:3003'
     - '3002:3002'
     - '6001:6001'
    environment:
     - BASE_URL="https://${DOMAIN}:3002/"
     - WS_URL="wss://${DOMAIN}:3003/"
     - DOMAIN=${DOMAIN}
     - domain=${DOMAIN}
     - DOCKER_BUILDKIT=1
    depends_on:
      - gateway
    healthcheck:
      test: ["CMD-SHELL", "nginx -t"]
      interval: 30s
      timeout: 5s
      retries: 5

  postgres:
    image: "postgres:${POSTGRES_VERSION}"
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
     - '5432:5432'
    volumes:
      - ./server/db:/docker-entrypoint-initdb.d
      - unkaos-pg-data:/var/lib/postgresql/data 
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -Uunkaos -dunkaos"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  unkaos-pg-data:
