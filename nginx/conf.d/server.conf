server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
    listen      443 ssl;
    server_name _;
    include             /etc/nginx/conf.d/10_ssl_params.include;
    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    location /not_found {
        root /var/www;
        try_files /not_found.html =404;
    }

    location /public/ {
        root /var/www;
        try_files $uri $uri/ =404;
    }

    location / {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma no-cache;
        add_header Expires 0;

        if (-f /etc/nginx/conf.d/maintenance.flag) { 
            return 503;
        }

        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
    }

    error_page 503 @maintenance;
    location @maintenance {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma no-cache;
        add_header Expires 0;
        root /var/www;
        rewrite ^ /maintenance.html break;
    }
}

server {
    listen      3002 ssl;
    server_name _;
    include             /etc/nginx/conf.d/10_ssl_params.include;
   
    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;


    location / {
        proxy_pass http://gateway:3001;
        proxy_set_header Host $http_host;
        proxy_set_header Access-Control-Allow-Origin *;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

    }
}

server {
    listen      6001 ssl;
    server_name _;
    include             /etc/nginx/conf.d/10_ssl_params.include;
   
    ssl_certificate     /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;


    location / {
        proxy_pass http://eileithyia:5001;
        proxy_set_header Host $http_host;
        proxy_set_header Access-Control-Allow-Origin *;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

    }
}

server {
   listen      3003 ssl;
   server_name _;
  
   ssl_certificate     /etc/nginx/ssl/cert.pem;
   ssl_certificate_key /etc/nginx/ssl/privkey.pem;
   ssl_session_timeout 5m;
    
  #       ssl_protocols SSLv3 SSLv2 TLSv1 TLSv1.1 TLSv1.2; # Настроить по этому$
 #   ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!$
#    ssl_prefer_server_ciphers on;


   location / {
       proxy_pass http://ossa:3004;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header Host $host;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

       # WebSocket support
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection $http_connection;
   }
}

